{"version":3,"file":"static/js/244.b85b7272.chunk.js","mappings":"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","sources":["components/home/SpecialOffers/SpecialOffers.js","components/pageProps/Breadcrumbs.js","pages/Offer/Offer.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Heading from \"../Products/Heading\";\nimport { FaRupeeSign } from \"react-icons/fa\";\nimport Image from \"../../designLayouts/Image\";\nimport { BsPlus, BsDash } from \"react-icons/bs\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { addToCart, decreaseCart } from \"../../../redux/cartSlice\";\nimport { GiShoppingCart } from \"react-icons/gi\";\nimport { baseURL } from \"../../../constants/index\";\nimport { AddCart } from \"../../../actions/CartActions\";\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst SpecialOffers = () => {\n  const homeDetails = useSelector(state => state.auth.homeDetails);\n  const dispatch = useDispatch()\n  const cartItems = useSelector((state) => state.cart.cartItems);\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n  const [quantities, setQuantities] = useState({});\n  const [selectedVariants, setSelectedVariants] = useState({});\n\n  const navigate = useNavigate()\n  const handleDecrease = (cartItem) => {\n    if (isAuthenticated) {\n      const newQuantities = {\n        ...quantities,\n        [cartItem.id]: Math.max(quantities[cartItem.id] - 1, 0)\n      };\n      setQuantities(newQuantities);\n      toast.error(\"item removed successfully\")\n      dispatch(decreaseCart(cartItem));\n\n    } else {\n      dispatch(decreaseCart(cartItem));\n    }\n  };\n  const handleIncrease = (cartItem) => {\n    const newQuantities = {\n      ...quantities,\n      [cartItem.id]: (quantities[cartItem.id] || 0) + 1\n    };\n    setQuantities(newQuantities);\n\n    const selectedVariant = selectedVariants[cartItem.id] || cartItem.quantity_variants[0];\n\n    const cartData = {\n      product_id: cartItem.id,\n      volume: selectedVariant.volume,\n      unit: selectedVariant.unit,\n      quantity: newQuantities[cartItem.id],\n      price: selectedVariant.price\n    };\n    if (isAuthenticated) {\n      AddCart(cartData);\n      toast.success(\"Item added to cart successfully\")\n    } else {\n      dispatch(addToCart(cartItem));\n      toast.success(\"Item added to cart successfully\")\n    }\n  };\n  const handleBuy = (product) => {\n    const newQuantities = {\n      ...quantities,\n      [product.id]: (quantities[product.id] || 0) + 1\n    };\n    setQuantities(newQuantities);\n\n    const selectedVariant = selectedVariants[product.id] || product.quantity_variants[0];\n\n    const cartData = {\n      product_id: product.id,\n      volume: selectedVariant.volume,\n      unit: selectedVariant.unit,\n      quantity: newQuantities[product.id],\n      price: selectedVariant.price\n    };\n    if (isAuthenticated) {\n      AddCart(cartData);\n    } else {\n      dispatch(addToCart(product));\n    }\n    navigate(\"/cart\")\n  }\n\n  const getCartQuantity = (productId) => {\n    if (isAuthenticated) {\n      return quantities[productId] || 0;\n    } else {\n      const cartItem = cartItems.find((item) => item.id === productId);\n      return cartItem ? cartItem.cartQuantity : 0;\n    }\n  };\n\n  if (!homeDetails || !homeDetails.healthy || homeDetails.healthy.length === 0) {\n    return null;\n  }\n  const handleView = (id) => {\n    navigate(`/productDetails`, { state: { productId: id } });\n  };\n\n  const handleVariantChange = (productId, variant) => {\n    setSelectedVariants({\n      ...selectedVariants,\n      [productId]: variant\n    });\n  };\n\n  return (\n    <div className=\" pb-20 lg:container\">\n      <ToastContainer />\n      <Heading heading=\"Healthy Delights\" />\n      <div className=\"grid grid-cols-1 xs:grid-cols-2 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-1 font-body3\" data-aos=\"fade-up\">\n        {homeDetails.healthy.slice(0, 10).map((product, index) => {\n          const selectedVariant = selectedVariants[product.id] || product.quantity_variants[0];\n          return (\n            <div key={product.id} className=\"p-2 \">\n              <div className=\"relative overflow-hidden group w-full h-full hover:shadow-slate-700 shadow-xl\">\n                <div className='flex flex-col items-center justify-center w-full h-auto bg-gray-100'>\n                  <div className=\"relative\" onClick={() => handleView(product.id)}>\n                    <Image className=\"md:w-[230px] md:h-[230px] xs:w-[140px] xs:h-[140px] cursor-pointer object-contain\" imgSrc={`${baseURL}${product.image}`} />\n                  </div>\n                </div>\n                <div className=\"py-1 flex flex-col gap-1 border-[1px] border-t-0 px-2 h-full bg-white group-hover:bg-yellow-100\">\n                  <div className=\"flex flex-col items-center justify-between font-titleFont \">\n                    <h2 className=\"text-base xs:text-sm sm:text-base md:text-lg lg:text-xl xl:text-xl font-body3 text-primeColor font-bold\">\n                      {product.name}\n                    </h2>\n                    <p className=\"xl:text-[18px] lg:text-[15px]  md:text-[15px] xs:text-[12px]  font-semibold flex items-center pt-1 \">\n                      <span className=\" xl:text-[12px] lg:text-[12px] md:text-[12px] xs:text-[10px]\">\n                        <FaRupeeSign />\n                      </span>\n                      <span className=\"line-through text-gray-600\">{selectedVariant ? selectedVariant.price + 100 : 'N/A'}</span>\n                      <span className=\"ml-2\">{selectedVariant ? selectedVariant.price : 'N/A'}</span>\n                    </p>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <select\n                      key={index}\n                      name=\"quantity\"\n                      className=\"order-1 mt-1 hover:bg-primeColor font-body2 text-black hover:text-white xl:text-[20px] lg:text-[20px] md:text-[15px] xs:text-[15px] sm:text-[15px]\"\n                      onChange={(e) => handleVariantChange(product.id, product.quantity_variants.find(variant => variant.volume === parseInt(e.target.value)))}\n                    >\n                      {product.quantity_variants.map((ite, variantIndex) => (\n                        <option\n                          key={`${product.id}_${variantIndex}`}\n                          value={ite.volume}\n                          className=\"text-black bg-white font-medium\"\n                        >\n                          {ite.volume}{ite.unit}\n                        </option>\n                      ))}\n                    </select>\n                    <div className=\"flex items-center order-2\">\n                      <button onClick={() => handleDecrease(product)} className=\"px-1 py-1 text-xs xs:text-xs sm:text-sm md:text-base lg:text-lg xl:text-lg bg-gray-300 hover:bg-red-400 text-black hover:text-white\">\n                        <BsDash />\n                      </button>\n                      <span className=\"px-1 text-xs xs:text-xs sm:text-sm md:text-base lg:text-lg xl:text-lg bg-gray-100\">{getCartQuantity(product.id)}</span>\n                      <button onClick={() => handleIncrease(product)} className=\"px-1 py-1 text-xs xs:text-xs sm:text-sm md:text-base lg:text-lg xl:text-lg bg-gray-300 hover:bg-green-400 text-black hover:text-white\">\n                        <BsPlus />\n                      </button>\n                    </div>\n                    <button onClick={() => handleBuy(product)} className=\"flex items-center order-3 font-body2 hover:bg-primeColor px-1 font-medium xs:text-[13px] sm:text-[15px] sml:text-[17px] md:text-[20px] lg:text-[20px] xl:text-[20px] text-black hover:text-white bg-white hover:translate-y-1 transition-transform duration-500\">\n                      <span className=\"pl-1\"><GiShoppingCart /></span>\n                    </button>\n                  </div>\n                  <div className={`md:text-lg lg:text-xl sm:text-sm font-normal text-center xs:text-[10px] ${selectedVariant?.in_stock <= 0 ? 'text-red-500' : selectedVariant?.in_stock > 0 && selectedVariant?.in_stock <= 10 ? 'text-yellow-500' : 'text-green-500'}`}>\n                    {selectedVariant?.in_stock <= 0 ? \"Out of Stock\" : selectedVariant?.in_stock > 0 && selectedVariant?.in_stock <= 10 ? `Only ${selectedVariant?.in_stock} items left` : selectedVariant ? `${selectedVariant.in_stock} left in stock` : \"Stock information not available\"}\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n\n\n  );\n};\n\nexport default SpecialOffers;\n","import React, { useEffect, useState } from \"react\";\nimport { HiOutlineChevronRight } from \"react-icons/hi\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Breadcrumbs = ({ prevLocation, title }) => {\n  const location = useLocation();\n  const [locationPath, setLocationPath] = useState(\"\");\n  useEffect(() => {\n    setLocationPath(location.pathname.split(\"/\")[1]);\n  }, [location]);\n\n  return (\n    <div className=\"w-full py-10 xl:py-10 flex flex-col gap-5\">\n      <h1 className=\"xl:text-5xl xs:text-2xl   text-primeColor font-body3 font-medium\">\n        {title}\n      </h1>\n      <p className=\"text-sm font-normal font-body3 text-black capitalize flex items-center\">\n        <span> {prevLocation === \"\" ? \"Home\" : prevLocation}</span>\n\n        <span className=\"px-1\">\n          <HiOutlineChevronRight />\n        </span>\n        <span className=\"capitalize font-semibold text-primeColor\">\n          {locationPath}\n        </span>\n      </p>\n    </div>\n  );\n};\n\nexport default Breadcrumbs;\n","import React, { useState } from \"react\";\nimport SpecialOffers from \"../../components/home/SpecialOffers/SpecialOffers\";\nimport Breadcrumbs from \"../../components/pageProps/Breadcrumbs\";\n\nconst Offer = () => {\n  const [prevLocation] = useState(\"\");\n\n  return (\n    <div className=\"max-w-container mx-auto\">\n      <Breadcrumbs title=\"Offer\" prevLocation={prevLocation} />\n      <div className=\"pb-10\">\n        <SpecialOffers />\n      </div>\n    </div>\n  );\n};\n\nexport default Offer;\n"],"names":["homeDetails","useSelector","state","auth","dispatch","useDispatch","cartItems","cart","isAuthenticated","quantities","setQuantities","useState","selectedVariants","setSelectedVariants","navigate","useNavigate","getCartQuantity","productId","cartItem","find","item","id","cartQuantity","healthy","length","className","heading","slice","map","product","index","selectedVariant","quantity_variants","onClick","handleView","imgSrc","baseURL","image","name","price","onChange","e","handleVariantChange","variant","volume","parseInt","target","value","ite","variantIndex","unit","newQuantities","Math","max","toast","decreaseCart","handleDecrease","cartData","product_id","quantity","AddCart","addToCart","handleIncrease","handleBuy","in_stock","prevLocation","title","location","useLocation","locationPath","setLocationPath","useEffect","pathname","split"],"sourceRoot":""}