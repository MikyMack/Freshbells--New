{"version":3,"file":"static/js/114.683d466b.chunk.js","mappings":"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","sources":["components/home/BestSellers/BestSellers.js","components/home/NewArrivals/SampleNextArrow.js","components/home/NewArrivals/SamplePrevArrow.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Heading from \"../Products/Heading\";\nimport { BsPlus, BsDash } from \"react-icons/bs\";\nimport { FaRupeeSign } from \"react-icons/fa\";\nimport Image from \"../../designLayouts/Image\";\nimport SampleNextArrow from \"../NewArrivals/SampleNextArrow\";\nimport SamplePrevArrow from \"../NewArrivals/SamplePrevArrow\";\nimport Slider from \"react-slick\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart, decreaseCart } from \"../../../redux/cartSlice\";\nimport { GiShoppingCart } from \"react-icons/gi\";\nimport { baseURL } from \"../../../constants/index\";\nimport { AddCart } from \"../../../actions/CartActions\";\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst BestSellers = () => {\n  const dispatch = useDispatch();\n  const homeDetails = useSelector(state => state.auth.homeDetails);\n  const cartItems = useSelector((state) => state.cart.cartItems);\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n  const [quantities, setQuantities] = useState({});\n  const [selectedVariants, setSelectedVariants] = useState({});\n  const settings = {\n    infinite: true,\n    speed: 500,\n    slidesToShow: 6,\n    slidesToScroll: 2,\n    nextArrow: <SampleNextArrow />,\n    prevArrow: <SamplePrevArrow />,\n    responsive: [\n      {\n        breakpoint: 1441,\n        settings: {\n          slidesToShow: 5,\n          slidesToScroll: 3,\n          infinite: true,\n        },\n      },\n      {\n        breakpoint: 1025,\n        settings: {\n          slidesToShow: 4,\n          slidesToScroll: 2,\n          infinite: true,\n        },\n      },\n      {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 2,\n          infinite: true,\n        },\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 1,\n          infinite: true,\n        },\n      },\n      {\n        breakpoint: 320,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          infinite: true,\n        },\n      },\n    ],\n  };\n  const navigate = useNavigate();\n  const handleDecrease = (cartItem) => {\n    if (isAuthenticated) {\n      const newQuantities = {\n        ...quantities,\n        [cartItem.id]: Math.max(quantities[cartItem.id] - 1, 0)\n      };\n      setQuantities(newQuantities);\n      toast.error(\"item removed successfully\");\n      dispatch(decreaseCart(cartItem));\n    } else {\n      dispatch(decreaseCart(cartItem));\n    }\n  };\n  const handleIncrease = (cartItem) => {\n    const newQuantities = {\n      ...quantities,\n      [cartItem.id]: (quantities[cartItem.id] || 0) + 1\n    };\n    setQuantities(newQuantities);\n\n    const selectedVariant = selectedVariants[cartItem.id] || cartItem.quantity_variants[0];\n\n    const cartData = {\n      product_id: cartItem.id,\n      volume: selectedVariant.volume,\n      unit: selectedVariant.unit,\n      quantity: newQuantities[cartItem.id],\n      price: selectedVariant.price\n    };\n    if (isAuthenticated) {\n      AddCart(cartData);\n      toast.success(\"Item added to cart successfully\");\n    } else {\n      dispatch(addToCart(cartItem));\n      toast.success(\"Item added to cart successfully\");\n    }\n  };\n  const handleBuy = (product) => {\n    const selectedVariant = selectedVariants[product.id] || product.quantity_variants[0];\n\n    const cartData = {\n      product_id: product.id,\n      volume: selectedVariant.volume,\n      unit: selectedVariant.unit,\n      quantity: product.cartQuantity,\n      price: selectedVariant.price\n    };\n    if (isAuthenticated) {\n      AddCart(cartData);\n    } else {\n      dispatch(addToCart(product));\n    }\n    navigate(\"/cart\");\n  };\n  const getCartQuantity = (productId) => {\n    if (isAuthenticated) {\n      return quantities[productId] || 0;\n    } else {\n      const cartItem = cartItems.find((item) => item.id === productId);\n      return cartItem ? cartItem.cartQuantity : 0;\n    }\n  };\n  const handleView = (id) => {\n    navigate(`/productDetails`, { state: { productId: id } });\n  };\n  const handleVariantChange = (productId, variant) => {\n    setSelectedVariants({\n      ...selectedVariants,\n      [productId]: variant\n    });\n  };\n  return (\n    <div className=\"w-full mt-6 pb-20 lg:container\">\n      <ToastContainer />\n      <Heading heading=\"Premium Products\" />\n      <Slider {...settings}>\n        {homeDetails ? homeDetails.Super.map((product, index) => {\n          const selectedVariant = selectedVariants[product.id] || product.quantity_variants[0];\n          return (\n            <div key={product.id} className=\"p-2\" data-aos=\"fade-up\">\n              <div className=\"relative overflow-hidden group max-w-full h-full font-body3 hover:shadow-slate-700 shadow-md\">\n                <div className=\"flex flex-col items-center justify-center max-w-full max-h-full bg-white \">\n                  <div className=\"relative\" onClick={() => handleView(product.id)}>\n                    <Image className=\"w-[250px] h-[250px] object-contain cursor-pointer\" imgSrc={`${baseURL}${product.image}`} />\n                  </div>\n                </div>\n                <div className=\"py-1 flex flex-col gap-1 border-[1px] border-t-0 px-2 bg-white h-full group-hover:bg-yellow-100\">\n                  <div className=\"flex flex-col items-center justify-between font-titleFont \">\n                    <h2 className=\"md:text-lg xl:text-xl lg:text-xl xs:text-[15px] sm:text-[15px] font-body3 text-primeColor font-semibold\">\n                      {product.name}\n                    </h2>\n                    <p className=\"text-primeColor xl:text-[18px] lg:text-[15px]  md:text-[15px] xs:text-[15px] sm:text-[18px] sml:text-[20px]  font-normal flex items-center pt-1 \">\n                      <span className=\" xl:text-[12px] lg:text-[10px] md:text-[12px] xs:text-[12px] sml:text-[15px] sm:text-[13px]\">\n                        <FaRupeeSign />\n                      </span>\n                      <span className=\"line-through text-gray-600\">{selectedVariant ? selectedVariant.price + 100 : 'N/A'}</span>\n                      <span className=\"ml-2\">{selectedVariant ? selectedVariant.price : 'N/A'}</span>\n                    </p>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <select\n                      key={index}\n                      name=\"quantity\"\n                      className=\"order-1 mt-1 hover:bg-primeColor font-body3 text-black hover:text-white xl:text-[18px] lg:text-[15px] md:text-[10px] xs:text-[10px] sm:text-[10px]\"\n                      onChange={(e) => handleVariantChange(product.id, product.quantity_variants.find(variant => variant.volume === parseInt(e.target.value)))}\n                    >\n                      {product.quantity_variants.map((ite, variantIndex) => (\n                        <option\n                          key={`${product.id}_${variantIndex}`}\n                          value={ite.volume}\n                          className=\"text-black bg-white font-medium\"\n                        >\n                          {ite.volume}{ite.unit}\n                        </option>\n                      ))}\n                    </select>\n                    <div className=\"flex items-center order-2\">\n                      <button onClick={() => handleDecrease(product)} className=\"px-2 py-2 text-lg bg-gray-300 hover:bg-red-400 text-black hover:text-white\">\n                        <BsDash />\n                      </button>\n                      <span className=\"px-3 text-lg  bg-gray-100\">{getCartQuantity(product.id)}</span>\n                      <button onClick={() => handleIncrease(product)} className=\"px-2 py-2 text-lg bg-gray-300 hover:bg-green-400 text-black hover:text-white\">\n                        <BsPlus />\n                      </button>\n                    </div>\n                    <button onClick={() => handleBuy(product)} className=\"flex items-center order-3 font-body2 hover:bg-primeColor px-2 font-medium xs:text-[20px] sm:text-[20px] sml:text-[20px] md:text-[20px] lg:text-[20px] xl:text-[20px] text-black hover:text-white bg-white  hover:translate-y-1 transition-transform duration-500\">\n                      <span className=\"pl-1\"><GiShoppingCart /></span>\n                    </button>\n                  </div>\n                  <div className={`md:text-lg lg:text-xl sm:text-sm font-normal text-center xs:text-[10px] ${selectedVariant?.in_stock <= 0 ? 'text-red-500' : selectedVariant?.in_stock > 0 && selectedVariant?.in_stock <= 10 ? 'text-yellow-500' : 'text-green-500'}`}>\n                    {selectedVariant?.in_stock <= 0 ? \"Out of Stock\" : selectedVariant?.in_stock > 0 && selectedVariant?.in_stock <= 10 ? `Only ${selectedVariant?.in_stock} items left` : selectedVariant ? `${selectedVariant.in_stock} left in stock` : \"Stock information not available\"}\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        }) : (\n          <h1 className=\"text-center\">Loading products...</h1>\n        )}\n      </Slider>\n    </div>\n  );\n};\n\nexport default BestSellers;\n","import React from \"react\";\nimport { FaLongArrowAltRight } from \"react-icons/fa\";\n\nconst SampleNextArrow = (props) => {\n  const { onClick } = props;\n  return (\n    <div\n      className=\"w-14 h-14 rounded-full text-white bg-black bg-opacity-40 hover:bg-opacity-100 duration-300 cursor-pointer flex justify-center items-center z-10 absolute top-[35%] right-2\"\n      onClick={onClick}\n    >\n      <span className=\"text-xl\">\n        <FaLongArrowAltRight />\n      </span>\n    </div>\n  );\n};\n\nexport default SampleNextArrow;\n","import React from \"react\";\nimport { FaLongArrowAltLeft } from \"react-icons/fa\";\n\nconst SamplePrevArrow = (props) => {\n  const { onClick } = props;\n  return (\n    <div\n      className=\"w-14 h-14 rounded-full text-white bg-black bg-opacity-40 hover:bg-opacity-100 duration-300 cursor-pointer flex justify-center items-center absolute z-10 top-[35%] left-2\"\n      onClick={onClick}\n    >\n      <span>\n        <FaLongArrowAltLeft />\n      </span>\n    </div>\n  );\n};\n\nexport default SamplePrevArrow;\n"],"names":["dispatch","useDispatch","homeDetails","useSelector","state","auth","cartItems","cart","isAuthenticated","quantities","setQuantities","useState","selectedVariants","setSelectedVariants","settings","infinite","speed","slidesToShow","slidesToScroll","nextArrow","prevArrow","responsive","breakpoint","navigate","useNavigate","getCartQuantity","productId","cartItem","find","item","id","cartQuantity","className","heading","Super","map","product","index","selectedVariant","quantity_variants","onClick","handleView","imgSrc","baseURL","image","name","price","onChange","e","handleVariantChange","variant","volume","parseInt","target","value","ite","variantIndex","unit","newQuantities","Math","max","toast","decreaseCart","handleDecrease","cartData","product_id","quantity","AddCart","addToCart","handleIncrease","handleBuy","in_stock","props"],"sourceRoot":""}