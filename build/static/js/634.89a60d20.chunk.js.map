{"version":3,"file":"static/js/634.89a60d20.chunk.js","mappings":"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","sources":["components/home/NewArrivals/NewArrivals.js"],"sourcesContent":["import React, { useState, useEffect, lazy, Suspense } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Slider from \"react-slick\";\nimport { FaRupeeSign } from \"react-icons/fa\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart, decreaseCart } from \"../../../redux/cartSlice\";\nimport { GiShoppingCart } from \"react-icons/gi\";\nimport { FaPlus, FaMinus } from \"react-icons/fa6\";\nimport { baseURL } from \"../../../constants/index\";\nimport { AddCart } from \"../../../actions/CartActions\";\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Heading = lazy(() => import(\"../Products/Heading\"));\nconst SampleNextArrow = lazy(() => import(\"./SampleNextArrow\"));\nconst SamplePrevArrow = lazy(() => import(\"./SamplePrevArrow\"));\n\nconst NewArrivals = () => {\n  const dispatch = useDispatch();\n  const homeDetails = useSelector((state) => state.auth.homeDetails);\n  const cartItems = useSelector((state) => state.cart.cartItems);\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n  const navigate = useNavigate();\n  const [quantities, setQuantities] = useState({});\n  const [selectedVariants, setSelectedVariants] = useState({});\n console.log(homeDetails,\"homeDetails\");\n  useEffect(() => {\n    if (isAuthenticated && homeDetails) {\n      const initialQuantities = homeDetails.products.reduce((acc, product) => {\n        acc[product.id] = 0; \n        return acc;\n      }, {});\n      setQuantities(initialQuantities);\n    }\n  }, [isAuthenticated, homeDetails]);\n\n  const settings = {\n    infinite: true,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 1,\n    nextArrow: <SampleNextArrow />,\n    prevArrow: <SamplePrevArrow />,\n    responsive: [\n      {\n        breakpoint: 1025,\n        settings: {\n          slidesToShow: 4,\n          slidesToScroll: 3,\n          infinite: true,\n        },\n      },\n      {\n        breakpoint: 769,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 1,\n          infinite: true,\n        },\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          infinite: true,\n        },\n      },\n    ],\n  };\n\n  const handleDecrease = (cartItem) => {\n    if (isAuthenticated) {\n      if (quantities[cartItem.id] > 0) {\n        const newQuantities = {\n          ...quantities,\n          [cartItem.id]: Math.max(quantities[cartItem.id] - 1, 0)\n        };\n        setQuantities(newQuantities);\n        toast.error(\"item removed successfully\")\n        dispatch(decreaseCart(cartItem));\n      }\n    } else {\n      const cartItemQuantity = cartItems.find((item) => item.id === cartItem.id)?.cartQuantity || 0;\n      if (cartItemQuantity > 0) {\n        dispatch(decreaseCart(cartItem));\n      }\n    }\n  };\n\n  const handleIncrease = (cartItem) => {\n    const newQuantities = {\n      ...quantities,\n      [cartItem.id]: (quantities[cartItem.id] || 0) + 1\n    };\n    setQuantities(newQuantities);\n\n    const selectedVariant = selectedVariants[cartItem.id] || cartItem.quantity_variants[0];\n\n    const cartData = {\n      product_id: cartItem.id,\n      volume: selectedVariant.volume,\n      unit: selectedVariant.unit,\n      quantity: newQuantities[cartItem.id],\n      price: selectedVariant.price\n    };\n    if (isAuthenticated) {\n      AddCart(cartData);\n      toast.success(\"Item added to cart successfully\")\n    } else {\n      dispatch(addToCart(cartItem));\n      toast.success(\"Item added to cart successfully\")\n    }\n  };\n\n  const handleBuy = (product) => {\n    const newQuantities = {\n      ...quantities,\n      [product.id]: (quantities[product.id] || 0) + 1\n    };\n    setQuantities(newQuantities);\n\n    const selectedVariant = selectedVariants[product.id] || product.quantity_variants[0];\n\n    const cartData = {\n      product_id: product.id,\n      volume: selectedVariant.volume,\n      unit: selectedVariant.unit,\n      quantity: newQuantities[product.id],\n      price: selectedVariant.price\n    };\n    if (isAuthenticated) {\n      AddCart(cartData);\n    } else {\n      dispatch(addToCart(product));\n    }\n    navigate(\"/cart\");\n  };\n\n  const getCartQuantity = (productId) => {\n    if (isAuthenticated) {\n      return quantities[productId] || 0;\n    } else {\n      const cartItem = cartItems.find((item) => item.id === productId);\n      return cartItem ? cartItem.cartQuantity : 0;\n    }\n  };\n\n  const handleView = (id) => {\n    navigate(`/productDetails`, { state: { productId: id } });\n  };\n\n  const handleVariantChange = (productId, variant) => {\n    setSelectedVariants({\n      ...selectedVariants,\n      [productId]: variant\n    });\n  };\n\n  return (\n    <div className=\"lg:container mx-auto pb-16 \"> \n    <ToastContainer />\n      <Suspense fallback={<div>Loading...</div>}>\n        <Heading key=\"super-foods-heading\" heading=\"Super Foods\" />\n        <Slider {...settings}>\n          {homeDetails && homeDetails.products ? homeDetails.products.map((product, index) => {\n            const selectedVariant = selectedVariants[product.id] || product.quantity_variants[0];\n            return (\n              <div key={product.id} className=\"p-2\" data-aos=\"fade-up\">\n                <div className=\"relative overflow-hidden group h-full hover:shadow-slate-500 shadow-xl\">\n                  <div className='flex flex-col items-center max-w-full max-h-full bg-[#ffffff] group-hover:bg-[#bbe6b9]'>\n                    <div className=\"relative \" onClick={() => handleView(product.id)}>\n                      <img\n                        className=\"w-[250px] h-[250px] object-contain cursor-pointer\"\n                        src={`${baseURL}${product.image}`}   alt=\"img\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"py-1 flex flex-col gap-1 h-full border-[1px] border-t-0 px-4 bg-[#f5f3f3] group-hover:bg-[#ffffff]\">\n                    <div className=\"flex flex-col items-center justify-between font-titleFont \">\n                      <h2 className=\"md:text-xl xl:text-2xl lg:text-xl xs:text-[15px] sm:text-[15px] font-body2 text-gray-800 font-normal\">\n                        {product.name}\n                      </h2>\n                      <p className=\"xl:text-[18px] lg:text-[15px]  md:text-[15px] xs:text-[15px] sm:text-[18px] sml:text-[20px]  font-normal flex items-center\">\n                        <span className=\" xl:text-[12px] lg:text-[10px] md:text-[12px] xs:text-[12px] sml:text-[15px] sm:text-[13px]\">\n                          <FaRupeeSign />\n                        </span>\n                        <span className=\"line-through text-gray-600\">{selectedVariant ? selectedVariant.price + 100 : 'N/A'}</span>\n                        <span className=\"ml-2\">{selectedVariant ? selectedVariant.price : 'N/A'}</span>\n                      </p>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <select\n                        key={index}\n                        name=\"quantity\"\n                        className=\"order-1 mt-1 hover:bg-primeColor bg-transparent font-normal font-body2 text-black hover:text-white xl:text-[20px] lg:text-[17px] md:text-[20px] xs:text-[18px] sm:text-[18px] sml:text-[18px]\"\n                        onChange={(e) => handleVariantChange(product.id, product.quantity_variants.find(variant => variant.volume === parseInt(e.target.value)))}\n                      >\n                        {product.quantity_variants?.map((ite) => (\n                          <option\n                            key={ite.id}\n                            value={ite.volume}\n                            className=\"text-black bg-white font-normal\" \n                          >\n                            {ite.volume}{ite.unit}\n                          </option>\n                        ))}\n                      </select>\n\n                      <div className=\"flex items-center order-2\">\n                        <button onClick={() => handleDecrease(product)} className=\"px-2 py-2 text-lg bg-gray-500 hover:bg-red-400 text-white\"><FaMinus /></button>\n                        <span className=\"px-4 text-lg bg-gray-300\">{getCartQuantity(product.id)}</span>\n                        <button onClick={() => handleIncrease(product)} className=\"px-2 py-2 text-lg bg-gray-500 hover:bg-green-400 text-white\"><FaPlus /></button>\n                      </div>\n                      <button onClick={() => handleBuy(product)} className=\"flex items-center order-3 ml-2 font-body2 hover:bg-primeColor px-2 font-medium xs:text-[25px] sm:text-[25px] sml:text-[30px] md:text-[30px] lg:text-[25px] xl:text-[25px] text-black hover:text-white rounded-2xl hover:rounded-none hover:translate-y-1 transition-transform duration-500\">\n                       <span className=\"pl-1\"><GiShoppingCart /></span>\n                      </button>\n                    </div>\n                    <div className={`md:text-lg lg:text-xl sm:text-sm font-normal text-center xs:text-[10px] ${selectedVariant?.in_stock <= 0 ? 'text-red-500' : selectedVariant?.in_stock > 0 && selectedVariant?.in_stock <= 10 ? 'text-yellow-500' : 'text-green-500'}`}>\n                    {selectedVariant?.in_stock <= 0 ? \"Out of Stock\" : selectedVariant?.in_stock > 0 && selectedVariant?.in_stock <= 10 ? `Only ${selectedVariant?.in_stock} items left` : selectedVariant ? `${selectedVariant.in_stock} left in stock` : \"Stock information not available\"}\n                  </div>\n                  </div>\n                </div>\n              </div>\n            );\n          }) : (\n            <h1 className=\"text-center\">Loading Products</h1>\n          )}\n        </Slider>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default NewArrivals;"],"names":["Heading","lazy","SampleNextArrow","SamplePrevArrow","dispatch","useDispatch","homeDetails","useSelector","state","auth","cartItems","cart","isAuthenticated","navigate","useNavigate","quantities","setQuantities","useState","selectedVariants","setSelectedVariants","console","log","useEffect","initialQuantities","products","reduce","acc","product","id","settings","infinite","speed","slidesToShow","slidesToScroll","nextArrow","prevArrow","responsive","breakpoint","getCartQuantity","productId","cartItem","find","item","cartQuantity","className","Suspense","fallback","heading","map","index","selectedVariant","quantity_variants","onClick","handleView","src","baseURL","image","alt","name","price","onChange","e","handleVariantChange","variant","volume","parseInt","target","value","ite","unit","newQuantities","Math","max","toast","decreaseCart","handleDecrease","cartData","product_id","quantity","AddCart","addToCart","handleIncrease","handleBuy","in_stock"],"sourceRoot":""}